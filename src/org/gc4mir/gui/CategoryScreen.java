/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.gc4mir.gui;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.gc4mir.basics.Category;
import org.gc4mir.core.Core;

/**
 *
 * @author Bruno
 */
public class CategoryScreen extends javax.swing.JFrame {

    private Core core;
    private DefaultTableModel tableModelRecordings;
    private JFileChooser load_recording_chooser = null;
    private String oldCategoryId;
    private Category oldCategory;
    private BasicMainScreen father;
    /**
     * Creates new form CategoryScreen
     */
    public CategoryScreen() {
        initComponents();
        
        this.core = Core.getInstance();
        
        this.tableModelRecordings = new DefaultTableModel();
        this.tableModelRecordings.addColumn("Name");
        this.tableModelRecordings.addColumn("Path");
        jTable1.setModel(this.tableModelRecordings);
    }
    
    public CategoryScreen(BasicMainScreen father) {
        initComponents();
        this.setLocationRelativeTo( null );
        
        this.core = Core.getInstance();
        this.father = father;
        
        this.tableModelRecordings = new DefaultTableModel();
        this.tableModelRecordings.addColumn("Name");
        this.tableModelRecordings.addColumn("Path");
        jTable1.setModel(this.tableModelRecordings);
    }
    
    public CategoryScreen(BasicMainScreen father, String categoryId){
        //will be used for editing categories
        initComponents();
        this.core = Core.getInstance();
        
        this.father = father;
        oldCategoryId = categoryId;
        
        this.tableModelRecordings = new DefaultTableModel();
        this.tableModelRecordings.addColumn("Name");
        this.tableModelRecordings.addColumn("Path");
        jTable1.setModel(this.tableModelRecordings);
        loadCategory();
        
    }

    private void loadCategory(){
        jTextField1.setText(oldCategoryId);
        
        oldCategory = core.getBaseCategories().getCategory(oldCategoryId);
        //load recordings in buffer
        for(int i = 0; i<oldCategory.getRecordings().size(); i++){
                    core.getBaseRecordings().addRecording(oldCategory.getRecordings().get(i));
                    oldCategory.addRecording(core.getBaseRecordings().getRecording(i));
        }
           
        refreshRecordingTable();
                
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Category");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Category name");

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Recordings");

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(!jTextField1.getText().isEmpty()){
            if(oldCategoryId == null){
                //adding category
                Category c = core.addCategory(jTextField1.getText());
                //you have to refresh the main screen table
                //you have to add the audios to the category
                for(int i = 0; i<core.getRecordingsSize(); i++){
                    c.addRecording(core.getBaseRecordings().getRecording(i));
                }
                core.getBaseRecordings().reset();
                this.dispose();
            
            }else{
                //editing category name && editing category recordings

                oldCategory.setId(jTextField1.getText());
                
                oldCategory.resetRecordings();
                for(int i = 0; i<core.getRecordingsSize(); i++){
                    oldCategory.addRecording(core.getBaseRecordings().getRecording(i));
                }
                
                this.dispose();
                   
            }
            
            
            
            
            
        }else{
            JOptionPane.showMessageDialog(this, "You have to write the category name");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        if (load_recording_chooser == null) {
			load_recording_chooser = new JFileChooser();
			load_recording_chooser.setCurrentDirectory(new File("."));
			load_recording_chooser
					.setFileFilter(new jAudioFeatureExtractor.jAudioTools.FileFilterAudio());
			load_recording_chooser
					.setFileSelectionMode(JFileChooser.FILES_ONLY);
			load_recording_chooser.setMultiSelectionEnabled(true);
		}

        // Read the user's choice of load or cancel
        int dialog_result = load_recording_chooser.showOpenDialog(null);

        // Add the files to the table and to recording_list
        if (dialog_result == JFileChooser.APPROVE_OPTION) // only do if OK
        // chosen
        {
                File[] load_files = load_recording_chooser.getSelectedFiles();
                try {
                    for(int i = 0; i < load_files.length; i++){
                        // Verify that the file exists
                        if(load_files[i].exists()){
                            core.addRecording(load_files[i].getName(), load_files[i].getPath());
                        }
                    }
                    refreshRecordingTable();
                } catch (Exception e1) {
                        e1.printStackTrace();
                }
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String path;
        
        int[] indexes = jTable1.getSelectedRows();
        for(int i = 0; i< indexes.length; i++){
            path = tableModelRecordings.getValueAt(indexes[i], 1).toString();
            core.getBaseRecordings().removeRecording(path);
        }
        
        refreshRecordingTable();
    }//GEN-LAST:event_removeButtonActionPerformed

    
    private void refreshTable(){
        //i have to refresh the other screen when it comes back
        refreshRecordingTable();
    }
    
    
    
    private void refreshRecordingTable(){
        tableModelRecordings.setRowCount(0);
        for(int i = 0; i < core.getRecordingsSize(); i++){
            String name = core.getBaseRecordings().getRecording(i).getName();
            String path = core.getBaseRecordings().getRecording(i).getPath();
            tableModelRecordings.addRow(new Object[]{name, path});
        }
    }
    
    @Override
    public void dispose(){
        core.getBaseRecordings().reset();
        oldCategoryId = null;
        oldCategory = null;
        father.refreshCategories();
        super.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
}
